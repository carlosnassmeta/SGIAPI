// <auto-generated />
using System;
using IMS.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IMS.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200915201639_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IMS.Domain.Entity.BookConfiguration", b =>
                {
                    b.Property<int>("BookConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("KpiBookId")
                        .HasColumnType("int");

                    b.Property<int>("LocaleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("BookConfigurationId");

                    b.HasIndex("KpiBookId");

                    b.HasIndex("LocaleId", "KpiBookId")
                        .IsUnique();

                    b.ToTable("BookConfiguration","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.FieldLocale", b =>
                {
                    b.Property<int>("FieldLocaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("KpiFieldId")
                        .HasColumnType("int");

                    b.Property<string>("LinkName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LinkUrl")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("LocaleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("FieldLocaleId");

                    b.HasIndex("KpiFieldId");

                    b.HasIndex("LocaleId", "KpiFieldId")
                        .IsUnique();

                    b.ToTable("FieldLocale","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.FieldTemplate", b =>
                {
                    b.Property<int>("FieldTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConditional")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<int>("OrderPosition")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("FieldTemplateId");

                    b.ToTable("FieldTemplate","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.FieldTemplateLocale", b =>
                {
                    b.Property<int>("FieldTemplateLocaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FieldTemplateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocaleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("FieldTemplateLocaleId");

                    b.HasIndex("FieldTemplateId");

                    b.HasIndex("LocaleId", "FieldTemplateId")
                        .IsUnique();

                    b.ToTable("FieldTemplateLocale","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.KpiBook", b =>
                {
                    b.Property<int>("KpiBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("KpiBookId");

                    b.ToTable("KpiBook","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.KpiField", b =>
                {
                    b.Property<int>("KpiFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FieldTemplateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("KpiPageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("KpiFieldId");

                    b.HasIndex("FieldTemplateId");

                    b.HasIndex("KpiPageId");

                    b.ToTable("KpiField","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.KpiPage", b =>
                {
                    b.Property<int>("KpiPageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("KpiBookId")
                        .HasColumnType("int");

                    b.Property<int>("PageTemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("KpiPageId");

                    b.HasIndex("KpiBookId");

                    b.HasIndex("PageTemplateId");

                    b.ToTable("KpiPage","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.Locale", b =>
                {
                    b.Property<int>("LocaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("LocaleId");

                    b.ToTable("Locale","ims");

                    b.HasData(
                        new
                        {
                            LocaleId = 1,
                            Description = "Português",
                            IsActive = true,
                            Name = "pt-BR"
                        },
                        new
                        {
                            LocaleId = 2,
                            Description = "Inglês",
                            IsActive = true,
                            Name = "en-US"
                        });
                });

            modelBuilder.Entity("IMS.Domain.Entity.PageTemplate", b =>
                {
                    b.Property<int>("PageTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderPosition")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PageTemplateId");

                    b.ToTable("PageTemplate","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.PageTemplateLocale", b =>
                {
                    b.Property<int>("PageTemplateLocaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocaleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PageTemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PageTemplateLocaleId");

                    b.HasIndex("PageTemplateId");

                    b.HasIndex("LocaleId", "PageTemplateId")
                        .IsUnique();

                    b.ToTable("PageTemplateLocale","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.Template", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TemplateId");

                    b.ToTable("Template","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.TemplatePageField", b =>
                {
                    b.Property<int>("TemplatePageFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FieldTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("PageTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("TemplatePageFieldId");

                    b.HasIndex("FieldTemplateId");

                    b.HasIndex("PageTemplateId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplatePageField","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("User","ims");
                });

            modelBuilder.Entity("IMS.Domain.Entity.BookConfiguration", b =>
                {
                    b.HasOne("IMS.Domain.Entity.KpiBook", "KpiBook")
                        .WithMany("BookConfigurations")
                        .HasForeignKey("KpiBookId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IMS.Domain.Entity.Locale", "Locale")
                        .WithMany("BookConfigurations")
                        .HasForeignKey("LocaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IMS.Domain.Entity.FieldLocale", b =>
                {
                    b.HasOne("IMS.Domain.Entity.KpiField", "KpiField")
                        .WithMany("FieldLocales")
                        .HasForeignKey("KpiFieldId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IMS.Domain.Entity.Locale", "Locale")
                        .WithMany("FieldLocales")
                        .HasForeignKey("LocaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IMS.Domain.Entity.FieldTemplateLocale", b =>
                {
                    b.HasOne("IMS.Domain.Entity.FieldTemplate", "FieldTemplate")
                        .WithMany("FieldTemplateLocales")
                        .HasForeignKey("FieldTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IMS.Domain.Entity.Locale", "Locale")
                        .WithMany("FieldTemplateLocales")
                        .HasForeignKey("LocaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IMS.Domain.Entity.KpiField", b =>
                {
                    b.HasOne("IMS.Domain.Entity.FieldTemplate", "FieldTemplate")
                        .WithMany()
                        .HasForeignKey("FieldTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IMS.Domain.Entity.KpiPage", "KpiPage")
                        .WithMany("KpiFields")
                        .HasForeignKey("KpiPageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IMS.Domain.Entity.KpiPage", b =>
                {
                    b.HasOne("IMS.Domain.Entity.KpiBook", "KpiBook")
                        .WithMany("KpiPages")
                        .HasForeignKey("KpiBookId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IMS.Domain.Entity.PageTemplate", "PageTemplate")
                        .WithMany()
                        .HasForeignKey("PageTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IMS.Domain.Entity.PageTemplateLocale", b =>
                {
                    b.HasOne("IMS.Domain.Entity.Locale", "Locale")
                        .WithMany("PageTemplateLocales")
                        .HasForeignKey("LocaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IMS.Domain.Entity.PageTemplate", "PageTemplate")
                        .WithMany("PageTemplateLocales")
                        .HasForeignKey("PageTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IMS.Domain.Entity.TemplatePageField", b =>
                {
                    b.HasOne("IMS.Domain.Entity.FieldTemplate", "FieldTemplate")
                        .WithMany()
                        .HasForeignKey("FieldTemplateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IMS.Domain.Entity.PageTemplate", "PageTemplate")
                        .WithMany()
                        .HasForeignKey("PageTemplateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IMS.Domain.Entity.Template", null)
                        .WithMany("TemplatePageFields")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
